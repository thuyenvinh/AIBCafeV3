//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_BillBillDetail", "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AIBCafe3.Bill), "BillDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.BillDetail), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_BillDetail_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Product), "BillDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.BillDetail), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Bill_Item", "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Item), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Bill), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Bills_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Employee), "Bill", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Bill), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Inwards_Employees", "Employee", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Employee), "Inward", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Inward), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_InwardDetail_Inward", "Inward", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Inward), "InwardDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.InwardDetail), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_InwardDetail_Product", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.Product), "InwardDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.InwardDetail), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Item_ItemType", "ItemType", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(AIBCafe3.ItemType), "Item", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Item), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_OrderTypeDetails_OrderTypes", "OrderType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AIBCafe3.OrderType), "OrderTypeDetail", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.OrderTypeDetail), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "FK_Product_ProductGroup1", "ProductGroup", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AIBCafe3.ProductGroup), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Product), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "UnitQuantitative", "Unit", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AIBCafe3.Unit), "Quantitative", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Quantitative), true)]
[assembly: EdmRelationshipAttribute("DatabaseModel", "ProductAssembly", "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(AIBCafe3.Product), "Assembly", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(AIBCafe3.Assembly), true)]

#endregion

namespace AIBCafe3
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AIBCafe3Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AIBCafe3Entities object using the connection string found in the 'AIBCafe3Entities' section of the application configuration file.
        /// </summary>
        public AIBCafe3Entities() : base("name=AIBCafe3Entities", "AIBCafe3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AIBCafe3Entities object.
        /// </summary>
        public AIBCafe3Entities(string connectionString) : base(connectionString, "AIBCafe3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AIBCafe3Entities object.
        /// </summary>
        public AIBCafe3Entities(EntityConnection connection) : base(connection, "AIBCafe3Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = false;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<BillDetail> BillDetails
        {
            get
            {
                if ((_BillDetails == null))
                {
                    _BillDetails = base.CreateObjectSet<BillDetail>("BillDetails");
                }
                return _BillDetails;
            }
        }
        private ObjectSet<BillDetail> _BillDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Bill> Bills
        {
            get
            {
                if ((_Bills == null))
                {
                    _Bills = base.CreateObjectSet<Bill>("Bills");
                }
                return _Bills;
            }
        }
        private ObjectSet<Bill> _Bills;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Config> Configs
        {
            get
            {
                if ((_Configs == null))
                {
                    _Configs = base.CreateObjectSet<Config>("Configs");
                }
                return _Configs;
            }
        }
        private ObjectSet<Config> _Configs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Employee> Employees
        {
            get
            {
                if ((_Employees == null))
                {
                    _Employees = base.CreateObjectSet<Employee>("Employees");
                }
                return _Employees;
            }
        }
        private ObjectSet<Employee> _Employees;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<InwardDetail> InwardDetails
        {
            get
            {
                if ((_InwardDetails == null))
                {
                    _InwardDetails = base.CreateObjectSet<InwardDetail>("InwardDetails");
                }
                return _InwardDetails;
            }
        }
        private ObjectSet<InwardDetail> _InwardDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Inward> Inwards
        {
            get
            {
                if ((_Inwards == null))
                {
                    _Inwards = base.CreateObjectSet<Inward>("Inwards");
                }
                return _Inwards;
            }
        }
        private ObjectSet<Inward> _Inwards;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ItemType> ItemTypes
        {
            get
            {
                if ((_ItemTypes == null))
                {
                    _ItemTypes = base.CreateObjectSet<ItemType>("ItemTypes");
                }
                return _ItemTypes;
            }
        }
        private ObjectSet<ItemType> _ItemTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderTypeDetail> OrderTypeDetails
        {
            get
            {
                if ((_OrderTypeDetails == null))
                {
                    _OrderTypeDetails = base.CreateObjectSet<OrderTypeDetail>("OrderTypeDetails");
                }
                return _OrderTypeDetails;
            }
        }
        private ObjectSet<OrderTypeDetail> _OrderTypeDetails;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<OrderType> OrderTypes
        {
            get
            {
                if ((_OrderTypes == null))
                {
                    _OrderTypes = base.CreateObjectSet<OrderType>("OrderTypes");
                }
                return _OrderTypes;
            }
        }
        private ObjectSet<OrderType> _OrderTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<ProductGroup> ProductGroups
        {
            get
            {
                if ((_ProductGroups == null))
                {
                    _ProductGroups = base.CreateObjectSet<ProductGroup>("ProductGroups");
                }
                return _ProductGroups;
            }
        }
        private ObjectSet<ProductGroup> _ProductGroups;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Unit> Units
        {
            get
            {
                if ((_Units == null))
                {
                    _Units = base.CreateObjectSet<Unit>("Units");
                }
                return _Units;
            }
        }
        private ObjectSet<Unit> _Units;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Quantitative> Quantitatives
        {
            get
            {
                if ((_Quantitatives == null))
                {
                    _Quantitatives = base.CreateObjectSet<Quantitative>("Quantitatives");
                }
                return _Quantitatives;
            }
        }
        private ObjectSet<Quantitative> _Quantitatives;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Assembly> Assemblies
        {
            get
            {
                if ((_Assemblies == null))
                {
                    _Assemblies = base.CreateObjectSet<Assembly>("Assemblies");
                }
                return _Assemblies;
            }
        }
        private ObjectSet<Assembly> _Assemblies;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the BillDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBillDetails(BillDetail billDetail)
        {
            base.AddObject("BillDetails", billDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Bills EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToBills(Bill bill)
        {
            base.AddObject("Bills", bill);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Configs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToConfigs(Config config)
        {
            base.AddObject("Configs", config);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Employees EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployees(Employee employee)
        {
            base.AddObject("Employees", employee);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the InwardDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInwardDetails(InwardDetail inwardDetail)
        {
            base.AddObject("InwardDetails", inwardDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Inwards EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToInwards(Inward inward)
        {
            base.AddObject("Inwards", inward);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ItemTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItemTypes(ItemType itemType)
        {
            base.AddObject("ItemTypes", itemType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderTypeDetails EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderTypeDetails(OrderTypeDetail orderTypeDetail)
        {
            base.AddObject("OrderTypeDetails", orderTypeDetail);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the OrderTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToOrderTypes(OrderType orderType)
        {
            base.AddObject("OrderTypes", orderType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ProductGroups EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProductGroups(ProductGroup productGroup)
        {
            base.AddObject("ProductGroups", productGroup);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Units EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUnits(Unit unit)
        {
            base.AddObject("Units", unit);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Quantitatives EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToQuantitatives(Quantitative quantitative)
        {
            base.AddObject("Quantitatives", quantitative);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Assemblies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAssemblies(Assembly assembly)
        {
            base.AddObject("Assemblies", assembly);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Assembly")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Assembly : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Assembly object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="productID_Parent">Initial value of the ProductID_Parent property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Assembly CreateAssembly(global::System.Guid id, global::System.Guid productID_Parent, global::System.Guid productID, global::System.Int16 quantity, global::System.String description)
        {
            Assembly assembly = new Assembly();
            assembly.Id = id;
            assembly.ProductID_Parent = productID_Parent;
            assembly.ProductID = productID;
            assembly.Quantity = quantity;
            assembly.Description = description;
            return assembly;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID_Parent
        {
            get
            {
                return _ProductID_Parent;
            }
            set
            {
                OnProductID_ParentChanging(value);
                ReportPropertyChanging("ProductID_Parent");
                _ProductID_Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID_Parent");
                OnProductID_ParentChanged();
            }
        }
        private global::System.Guid _ProductID_Parent;
        partial void OnProductID_ParentChanging(global::System.Guid value);
        partial void OnProductID_ParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.Guid _ProductID;
        partial void OnProductIDChanging(global::System.Guid value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "ProductAssembly", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.ProductAssembly", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.ProductAssembly", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.ProductAssembly", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DatabaseModel.ProductAssembly", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Bill")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Bill : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Bill object.
        /// </summary>
        /// <param name="billID">Initial value of the BillID property.</param>
        public static Bill CreateBill(global::System.Guid billID)
        {
            Bill bill = new Bill();
            bill.BillID = billID;
            return bill;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                if (_BillID != value)
                {
                    OnBillIDChanging(value);
                    ReportPropertyChanging("BillID");
                    _BillID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillID");
                    OnBillIDChanged();
                }
            }
        }
        private global::System.Guid _BillID;
        partial void OnBillIDChanging(global::System.Guid value);
        partial void OnBillIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                OnItemIDChanging(value);
                ReportPropertyChanging("ItemID");
                _ItemID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemID");
                OnItemIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ItemID;
        partial void OnItemIDChanging(Nullable<global::System.Guid> value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeesID
        {
            get
            {
                return _EmployeesID;
            }
            set
            {
                OnEmployeesIDChanging(value);
                ReportPropertyChanging("EmployeesID");
                _EmployeesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeesID");
                OnEmployeesIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeesID;
        partial void OnEmployeesIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Byte> Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private Nullable<global::System.Byte> _Discount;
        partial void OnDiscountChanging(Nullable<global::System.Byte> value);
        partial void OnDiscountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_BillBillDetail", "BillDetail")]
        public EntityCollection<BillDetail> BillDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillDetail>("DatabaseModel.FK_BillBillDetail", "BillDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillDetail>("DatabaseModel.FK_BillBillDetail", "BillDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Bill_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DatabaseModel.FK_Bill_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DatabaseModel.FK_Bill_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("DatabaseModel.FK_Bill_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("DatabaseModel.FK_Bill_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Bills_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Bills_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Bills_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Bills_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DatabaseModel.FK_Bills_Employees", "Employee", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="BillDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class BillDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BillDetail object.
        /// </summary>
        /// <param name="billDetailID">Initial value of the BillDetailID property.</param>
        /// <param name="billID">Initial value of the BillID property.</param>
        public static BillDetail CreateBillDetail(global::System.Guid billDetailID, global::System.Guid billID)
        {
            BillDetail billDetail = new BillDetail();
            billDetail.BillDetailID = billDetailID;
            billDetail.BillID = billID;
            return billDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillDetailID
        {
            get
            {
                return _BillDetailID;
            }
            set
            {
                if (_BillDetailID != value)
                {
                    OnBillDetailIDChanging(value);
                    ReportPropertyChanging("BillDetailID");
                    _BillDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("BillDetailID");
                    OnBillDetailIDChanged();
                }
            }
        }
        private global::System.Guid _BillDetailID;
        partial void OnBillDetailIDChanging(global::System.Guid value);
        partial void OnBillDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Guid> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Single> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Single> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Single> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BillID
        {
            get
            {
                return _BillID;
            }
            set
            {
                OnBillIDChanging(value);
                ReportPropertyChanging("BillID");
                _BillID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BillID");
                OnBillIDChanged();
            }
        }
        private global::System.Guid _BillID;
        partial void OnBillIDChanging(global::System.Guid value);
        partial void OnBillIDChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_BillBillDetail", "Bill")]
        public Bill Bill
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("DatabaseModel.FK_BillBillDetail", "Bill").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("DatabaseModel.FK_BillBillDetail", "Bill").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Bill> BillReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Bill>("DatabaseModel.FK_BillBillDetail", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Bill>("DatabaseModel.FK_BillBillDetail", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_BillDetail_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_BillDetail_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_BillDetail_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_BillDetail_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DatabaseModel.FK_BillDetail_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Config")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Config : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Config object.
        /// </summary>
        /// <param name="configID">Initial value of the ConfigID property.</param>
        public static Config CreateConfig(global::System.Guid configID)
        {
            Config config = new Config();
            config.ConfigID = configID;
            return config;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ConfigID
        {
            get
            {
                return _ConfigID;
            }
            set
            {
                if (_ConfigID != value)
                {
                    OnConfigIDChanging(value);
                    ReportPropertyChanging("ConfigID");
                    _ConfigID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ConfigID");
                    OnConfigIDChanged();
                }
            }
        }
        private global::System.Guid _ConfigID;
        partial void OnConfigIDChanging(global::System.Guid value);
        partial void OnConfigIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Company
        {
            get
            {
                return _Company;
            }
            set
            {
                OnCompanyChanging(value);
                ReportPropertyChanging("Company");
                _Company = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Company");
                OnCompanyChanged();
            }
        }
        private global::System.String _Company;
        partial void OnCompanyChanging(global::System.String value);
        partial void OnCompanyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Address
        {
            get
            {
                return _Address;
            }
            set
            {
                OnAddressChanging(value);
                ReportPropertyChanging("Address");
                _Address = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Address");
                OnAddressChanged();
            }
        }
        private global::System.String _Address;
        partial void OnAddressChanging(global::System.String value);
        partial void OnAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Tel
        {
            get
            {
                return _Tel;
            }
            set
            {
                OnTelChanging(value);
                ReportPropertyChanging("Tel");
                _Tel = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Tel");
                OnTelChanged();
            }
        }
        private global::System.String _Tel;
        partial void OnTelChanging(global::System.String value);
        partial void OnTelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Sologan
        {
            get
            {
                return _Sologan;
            }
            set
            {
                OnSologanChanging(value);
                ReportPropertyChanging("Sologan");
                _Sologan = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Sologan");
                OnSologanChanged();
            }
        }
        private global::System.String _Sologan;
        partial void OnSologanChanging(global::System.String value);
        partial void OnSologanChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateEnd
        {
            get
            {
                return _DateEnd;
            }
            set
            {
                OnDateEndChanging(value);
                ReportPropertyChanging("DateEnd");
                _DateEnd = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateEnd");
                OnDateEndChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateEnd;
        partial void OnDateEndChanging(Nullable<global::System.DateTime> value);
        partial void OnDateEndChanged();

        #endregion
    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Employee")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Employee : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Employee object.
        /// </summary>
        /// <param name="employeesID">Initial value of the EmployeesID property.</param>
        /// <param name="loginName">Initial value of the LoginName property.</param>
        public static Employee CreateEmployee(global::System.Guid employeesID, global::System.String loginName)
        {
            Employee employee = new Employee();
            employee.EmployeesID = employeesID;
            employee.LoginName = loginName;
            return employee;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid EmployeesID
        {
            get
            {
                return _EmployeesID;
            }
            set
            {
                if (_EmployeesID != value)
                {
                    OnEmployeesIDChanging(value);
                    ReportPropertyChanging("EmployeesID");
                    _EmployeesID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("EmployeesID");
                    OnEmployeesIDChanged();
                }
            }
        }
        private global::System.Guid _EmployeesID;
        partial void OnEmployeesIDChanging(global::System.Guid value);
        partial void OnEmployeesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Password
        {
            get
            {
                return _Password;
            }
            set
            {
                OnPasswordChanging(value);
                ReportPropertyChanging("Password");
                _Password = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Password");
                OnPasswordChanged();
            }
        }
        private global::System.String _Password;
        partial void OnPasswordChanging(global::System.String value);
        partial void OnPasswordChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Sell
        {
            get
            {
                return _Sell;
            }
            set
            {
                OnSellChanging(value);
                ReportPropertyChanging("Sell");
                _Sell = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Sell");
                OnSellChanged();
            }
        }
        private Nullable<global::System.Boolean> _Sell;
        partial void OnSellChanging(Nullable<global::System.Boolean> value);
        partial void OnSellChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> InWard
        {
            get
            {
                return _InWard;
            }
            set
            {
                OnInWardChanging(value);
                ReportPropertyChanging("InWard");
                _InWard = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InWard");
                OnInWardChanged();
            }
        }
        private Nullable<global::System.Boolean> _InWard;
        partial void OnInWardChanging(Nullable<global::System.Boolean> value);
        partial void OnInWardChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private Nullable<global::System.Boolean> _Report;
        partial void OnReportChanging(Nullable<global::System.Boolean> value);
        partial void OnReportChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Empl
        {
            get
            {
                return _Empl;
            }
            set
            {
                OnEmplChanging(value);
                ReportPropertyChanging("Empl");
                _Empl = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Empl");
                OnEmplChanged();
            }
        }
        private Nullable<global::System.Boolean> _Empl;
        partial void OnEmplChanging(Nullable<global::System.Boolean> value);
        partial void OnEmplChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Product
        {
            get
            {
                return _Product;
            }
            set
            {
                OnProductChanging(value);
                ReportPropertyChanging("Product");
                _Product = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Product");
                OnProductChanged();
            }
        }
        private Nullable<global::System.Boolean> _Product;
        partial void OnProductChanging(Nullable<global::System.Boolean> value);
        partial void OnProductChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Item
        {
            get
            {
                return _Item;
            }
            set
            {
                OnItemChanging(value);
                ReportPropertyChanging("Item");
                _Item = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Item");
                OnItemChanged();
            }
        }
        private Nullable<global::System.Boolean> _Item;
        partial void OnItemChanging(Nullable<global::System.Boolean> value);
        partial void OnItemChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoginName
        {
            get
            {
                return _LoginName;
            }
            set
            {
                OnLoginNameChanging(value);
                ReportPropertyChanging("LoginName");
                _LoginName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoginName");
                OnLoginNameChanged();
            }
        }
        private global::System.String _LoginName;
        partial void OnLoginNameChanging(global::System.String value);
        partial void OnLoginNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Bills_Employees", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("DatabaseModel.FK_Bills_Employees", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("DatabaseModel.FK_Bills_Employees", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Inwards_Employees", "Inward")]
        public EntityCollection<Inward> Inwards
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Inward>("DatabaseModel.FK_Inwards_Employees", "Inward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Inward>("DatabaseModel.FK_Inwards_Employees", "Inward", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Inward")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Inward : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Inward object.
        /// </summary>
        /// <param name="inwardID">Initial value of the InwardID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Inward CreateInward(global::System.Guid inwardID, global::System.String description)
        {
            Inward inward = new Inward();
            inward.InwardID = inwardID;
            inward.Description = description;
            return inward;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InwardID
        {
            get
            {
                return _InwardID;
            }
            set
            {
                if (_InwardID != value)
                {
                    OnInwardIDChanging(value);
                    ReportPropertyChanging("InwardID");
                    _InwardID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InwardID");
                    OnInwardIDChanged();
                }
            }
        }
        private global::System.Guid _InwardID;
        partial void OnInwardIDChanging(global::System.Guid value);
        partial void OnInwardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> EmployeesID
        {
            get
            {
                return _EmployeesID;
            }
            set
            {
                OnEmployeesIDChanging(value);
                ReportPropertyChanging("EmployeesID");
                _EmployeesID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeesID");
                OnEmployeesIDChanged();
            }
        }
        private Nullable<global::System.Guid> _EmployeesID;
        partial void OnEmployeesIDChanging(Nullable<global::System.Guid> value);
        partial void OnEmployeesIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _Date;
        partial void OnDateChanging(Nullable<global::System.DateTime> value);
        partial void OnDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Amount
        {
            get
            {
                return _Amount;
            }
            set
            {
                OnAmountChanging(value);
                ReportPropertyChanging("Amount");
                _Amount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Amount");
                OnAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _Amount;
        partial void OnAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnAmountChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Inwards_Employees", "Employee")]
        public Employee Employee
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Inwards_Employees", "Employee").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Inwards_Employees", "Employee").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Employee> EmployeeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Employee>("DatabaseModel.FK_Inwards_Employees", "Employee");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Employee>("DatabaseModel.FK_Inwards_Employees", "Employee", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_InwardDetail_Inward", "InwardDetail")]
        public EntityCollection<InwardDetail> InwardDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InwardDetail>("DatabaseModel.FK_InwardDetail_Inward", "InwardDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InwardDetail>("DatabaseModel.FK_InwardDetail_Inward", "InwardDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="InwardDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class InwardDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new InwardDetail object.
        /// </summary>
        /// <param name="inwardDetailID">Initial value of the InwardDetailID property.</param>
        public static InwardDetail CreateInwardDetail(global::System.Guid inwardDetailID)
        {
            InwardDetail inwardDetail = new InwardDetail();
            inwardDetail.InwardDetailID = inwardDetailID;
            return inwardDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid InwardDetailID
        {
            get
            {
                return _InwardDetailID;
            }
            set
            {
                if (_InwardDetailID != value)
                {
                    OnInwardDetailIDChanging(value);
                    ReportPropertyChanging("InwardDetailID");
                    _InwardDetailID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("InwardDetailID");
                    OnInwardDetailIDChanged();
                }
            }
        }
        private global::System.Guid _InwardDetailID;
        partial void OnInwardDetailIDChanging(global::System.Guid value);
        partial void OnInwardDetailIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> InwardID
        {
            get
            {
                return _InwardID;
            }
            set
            {
                OnInwardIDChanging(value);
                ReportPropertyChanging("InwardID");
                _InwardID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InwardID");
                OnInwardIDChanged();
            }
        }
        private Nullable<global::System.Guid> _InwardID;
        partial void OnInwardIDChanging(Nullable<global::System.Guid> value);
        partial void OnInwardIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ProductID;
        partial void OnProductIDChanging(Nullable<global::System.Guid> value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_InwardDetail_Inward", "Inward")]
        public Inward Inward
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inward>("DatabaseModel.FK_InwardDetail_Inward", "Inward").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inward>("DatabaseModel.FK_InwardDetail_Inward", "Inward").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Inward> InwardReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Inward>("DatabaseModel.FK_InwardDetail_Inward", "Inward");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Inward>("DatabaseModel.FK_InwardDetail_Inward", "Inward", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_InwardDetail_Product", "Product")]
        public Product Product
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_InwardDetail_Product", "Product").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_InwardDetail_Product", "Product").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Product> ProductReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Product>("DatabaseModel.FK_InwardDetail_Product", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Product>("DatabaseModel.FK_InwardDetail_Product", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="itemID">Initial value of the ItemID property.</param>
        public static Item CreateItem(global::System.Guid itemID)
        {
            Item item = new Item();
            item.ItemID = itemID;
            return item;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemID
        {
            get
            {
                return _ItemID;
            }
            set
            {
                if (_ItemID != value)
                {
                    OnItemIDChanging(value);
                    ReportPropertyChanging("ItemID");
                    _ItemID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemID");
                    OnItemIDChanged();
                }
            }
        }
        private global::System.Guid _ItemID;
        partial void OnItemIDChanging(global::System.Guid value);
        partial void OnItemIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                OnItemTypeIDChanging(value);
                ReportPropertyChanging("ItemTypeID");
                _ItemTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ItemTypeID");
                OnItemTypeIDChanged();
            }
        }
        private Nullable<global::System.Guid> _ItemTypeID;
        partial void OnItemTypeIDChanging(Nullable<global::System.Guid> value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Status
        {
            get
            {
                return _Status;
            }
            set
            {
                OnStatusChanging(value);
                ReportPropertyChanging("Status");
                _Status = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Status");
                OnStatusChanged();
            }
        }
        private Nullable<global::System.Boolean> _Status;
        partial void OnStatusChanging(Nullable<global::System.Boolean> value);
        partial void OnStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int16> value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Bill_Item", "Bill")]
        public EntityCollection<Bill> Bills
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Bill>("DatabaseModel.FK_Bill_Item", "Bill");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Bill>("DatabaseModel.FK_Bill_Item", "Bill", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Item_ItemType", "ItemType")]
        public ItemType ItemType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("DatabaseModel.FK_Item_ItemType", "ItemType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("DatabaseModel.FK_Item_ItemType", "ItemType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ItemType> ItemTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ItemType>("DatabaseModel.FK_Item_ItemType", "ItemType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ItemType>("DatabaseModel.FK_Item_ItemType", "ItemType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="ItemType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ItemType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ItemType object.
        /// </summary>
        /// <param name="itemTypeID">Initial value of the ItemTypeID property.</param>
        public static ItemType CreateItemType(global::System.Guid itemTypeID)
        {
            ItemType itemType = new ItemType();
            itemType.ItemTypeID = itemTypeID;
            return itemType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ItemTypeID
        {
            get
            {
                return _ItemTypeID;
            }
            set
            {
                if (_ItemTypeID != value)
                {
                    OnItemTypeIDChanging(value);
                    ReportPropertyChanging("ItemTypeID");
                    _ItemTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ItemTypeID");
                    OnItemTypeIDChanged();
                }
            }
        }
        private global::System.Guid _ItemTypeID;
        partial void OnItemTypeIDChanging(global::System.Guid value);
        partial void OnItemTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Timing
        {
            get
            {
                return _Timing;
            }
            set
            {
                OnTimingChanging(value);
                ReportPropertyChanging("Timing");
                _Timing = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Timing");
                OnTimingChanged();
            }
        }
        private Nullable<global::System.Boolean> _Timing;
        partial void OnTimingChanging(Nullable<global::System.Boolean> value);
        partial void OnTimingChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int16> value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Item_ItemType", "Item")]
        public EntityCollection<Item> Items
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Item>("DatabaseModel.FK_Item_ItemType", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Item>("DatabaseModel.FK_Item_ItemType", "Item", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="OrderType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderType object.
        /// </summary>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        public static OrderType CreateOrderType(global::System.Guid orderID)
        {
            OrderType orderType = new OrderType();
            orderType.OrderID = orderID;
            return orderType;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                if (_OrderID != value)
                {
                    OnOrderIDChanging(value);
                    ReportPropertyChanging("OrderID");
                    _OrderID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("OrderID");
                    OnOrderIDChanged();
                }
            }
        }
        private global::System.Guid _OrderID;
        partial void OnOrderIDChanging(global::System.Guid value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String OrderName
        {
            get
            {
                return _OrderName;
            }
            set
            {
                OnOrderNameChanging(value);
                ReportPropertyChanging("OrderName");
                _OrderName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("OrderName");
                OnOrderNameChanged();
            }
        }
        private global::System.String _OrderName;
        partial void OnOrderNameChanging(global::System.String value);
        partial void OnOrderNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_OrderTypeDetails_OrderTypes", "OrderTypeDetail")]
        public EntityCollection<OrderTypeDetail> OrderTypeDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<OrderTypeDetail>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderTypeDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<OrderTypeDetail>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderTypeDetail", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="OrderTypeDetail")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OrderTypeDetail : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new OrderTypeDetail object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="orderID">Initial value of the OrderID property.</param>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="discount">Initial value of the Discount property.</param>
        public static OrderTypeDetail CreateOrderTypeDetail(global::System.Guid id, global::System.Guid orderID, global::System.String productID, global::System.String discount)
        {
            OrderTypeDetail orderTypeDetail = new OrderTypeDetail();
            orderTypeDetail.Id = id;
            orderTypeDetail.OrderID = orderID;
            orderTypeDetail.ProductID = productID;
            orderTypeDetail.Discount = discount;
            return orderTypeDetail;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OrderID
        {
            get
            {
                return _OrderID;
            }
            set
            {
                OnOrderIDChanging(value);
                ReportPropertyChanging("OrderID");
                _OrderID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderID");
                OnOrderIDChanged();
            }
        }
        private global::System.Guid _OrderID;
        partial void OnOrderIDChanging(global::System.Guid value);
        partial void OnOrderIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                OnProductIDChanging(value);
                ReportPropertyChanging("ProductID");
                _ProductID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductID");
                OnProductIDChanged();
            }
        }
        private global::System.String _ProductID;
        partial void OnProductIDChanging(global::System.String value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Discount
        {
            get
            {
                return _Discount;
            }
            set
            {
                OnDiscountChanging(value);
                ReportPropertyChanging("Discount");
                _Discount = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Discount");
                OnDiscountChanged();
            }
        }
        private global::System.String _Discount;
        partial void OnDiscountChanging(global::System.String value);
        partial void OnDiscountChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_OrderTypeDetails_OrderTypes", "OrderType")]
        public OrderType OrderType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderType>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderType>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OrderType> OrderTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OrderType>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OrderType>("DatabaseModel.FK_OrderTypeDetails_OrderTypes", "OrderType", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="productID">Initial value of the ProductID property.</param>
        /// <param name="productGroupID">Initial value of the ProductGroupID property.</param>
        /// <param name="productName">Initial value of the ProductName property.</param>
        public static Product CreateProduct(global::System.Guid productID, global::System.Guid productGroupID, global::System.String productName)
        {
            Product product = new Product();
            product.ProductID = productID;
            product.ProductGroupID = productGroupID;
            product.ProductName = productName;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductID
        {
            get
            {
                return _ProductID;
            }
            set
            {
                if (_ProductID != value)
                {
                    OnProductIDChanging(value);
                    ReportPropertyChanging("ProductID");
                    _ProductID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductID");
                    OnProductIDChanged();
                }
            }
        }
        private global::System.Guid _ProductID;
        partial void OnProductIDChanging(global::System.Guid value);
        partial void OnProductIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductGroupID
        {
            get
            {
                return _ProductGroupID;
            }
            set
            {
                OnProductGroupIDChanging(value);
                ReportPropertyChanging("ProductGroupID");
                _ProductGroupID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductGroupID");
                OnProductGroupIDChanged();
            }
        }
        private global::System.Guid _ProductGroupID;
        partial void OnProductGroupIDChanging(global::System.Guid value);
        partial void OnProductGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int16> value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                OnUnitIDChanging(value);
                ReportPropertyChanging("UnitID");
                _UnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitID");
                OnUnitIDChanged();
            }
        }
        private Nullable<global::System.Guid> _UnitID;
        partial void OnUnitIDChanging(Nullable<global::System.Guid> value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> Price
        {
            get
            {
                return _Price;
            }
            set
            {
                OnPriceChanging(value);
                ReportPropertyChanging("Price");
                _Price = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Price");
                OnPriceChanged();
            }
        }
        private Nullable<global::System.Decimal> _Price;
        partial void OnPriceChanging(Nullable<global::System.Decimal> value);
        partial void OnPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private Nullable<global::System.Boolean> _Active;
        partial void OnActiveChanging(Nullable<global::System.Boolean> value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Show
        {
            get
            {
                return _Show;
            }
            set
            {
                OnShowChanging(value);
                ReportPropertyChanging("Show");
                _Show = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Show");
                OnShowChanged();
            }
        }
        private Nullable<global::System.Boolean> _Show;
        partial void OnShowChanging(Nullable<global::System.Boolean> value);
        partial void OnShowChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_BillDetail_Product", "BillDetail")]
        public EntityCollection<BillDetail> BillDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<BillDetail>("DatabaseModel.FK_BillDetail_Product", "BillDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<BillDetail>("DatabaseModel.FK_BillDetail_Product", "BillDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_InwardDetail_Product", "InwardDetail")]
        public EntityCollection<InwardDetail> InwardDetails
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<InwardDetail>("DatabaseModel.FK_InwardDetail_Product", "InwardDetail");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<InwardDetail>("DatabaseModel.FK_InwardDetail_Product", "InwardDetail", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Product_ProductGroup1", "ProductGroup")]
        public ProductGroup ProductGroup
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("DatabaseModel.FK_Product_ProductGroup1", "ProductGroup").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("DatabaseModel.FK_Product_ProductGroup1", "ProductGroup").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<ProductGroup> ProductGroupReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<ProductGroup>("DatabaseModel.FK_Product_ProductGroup1", "ProductGroup");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<ProductGroup>("DatabaseModel.FK_Product_ProductGroup1", "ProductGroup", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "ProductAssembly", "Assembly")]
        public EntityCollection<Assembly> Assemblies
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Assembly>("DatabaseModel.ProductAssembly", "Assembly");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Assembly>("DatabaseModel.ProductAssembly", "Assembly", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="ProductGroup")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class ProductGroup : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ProductGroup object.
        /// </summary>
        /// <param name="productGroupID">Initial value of the ProductGroupID property.</param>
        public static ProductGroup CreateProductGroup(global::System.Guid productGroupID)
        {
            ProductGroup productGroup = new ProductGroup();
            productGroup.ProductGroupID = productGroupID;
            return productGroup;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ProductGroupID
        {
            get
            {
                return _ProductGroupID;
            }
            set
            {
                if (_ProductGroupID != value)
                {
                    OnProductGroupIDChanging(value);
                    ReportPropertyChanging("ProductGroupID");
                    _ProductGroupID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ProductGroupID");
                    OnProductGroupIDChanged();
                }
            }
        }
        private global::System.Guid _ProductGroupID;
        partial void OnProductGroupIDChanging(global::System.Guid value);
        partial void OnProductGroupIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int16> DisplayOrder
        {
            get
            {
                return _DisplayOrder;
            }
            set
            {
                OnDisplayOrderChanging(value);
                ReportPropertyChanging("DisplayOrder");
                _DisplayOrder = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DisplayOrder");
                OnDisplayOrderChanged();
            }
        }
        private Nullable<global::System.Int16> _DisplayOrder;
        partial void OnDisplayOrderChanging(Nullable<global::System.Int16> value);
        partial void OnDisplayOrderChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Report
        {
            get
            {
                return _Report;
            }
            set
            {
                OnReportChanging(value);
                ReportPropertyChanging("Report");
                _Report = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Report");
                OnReportChanged();
            }
        }
        private Nullable<global::System.Boolean> _Report;
        partial void OnReportChanging(Nullable<global::System.Boolean> value);
        partial void OnReportChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "FK_Product_ProductGroup1", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("DatabaseModel.FK_Product_ProductGroup1", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("DatabaseModel.FK_Product_ProductGroup1", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Quantitative")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Quantitative : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Quantitative object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="unitID_Parent">Initial value of the UnitID_Parent property.</param>
        /// <param name="unitID">Initial value of the UnitID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static Quantitative CreateQuantitative(global::System.Guid id, global::System.Guid unitID_Parent, global::System.Guid unitID, global::System.Int16 quantity)
        {
            Quantitative quantitative = new Quantitative();
            quantitative.Id = id;
            quantitative.UnitID_Parent = unitID_Parent;
            quantitative.UnitID = unitID;
            quantitative.Quantity = quantity;
            return quantitative;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UnitID_Parent
        {
            get
            {
                return _UnitID_Parent;
            }
            set
            {
                OnUnitID_ParentChanging(value);
                ReportPropertyChanging("UnitID_Parent");
                _UnitID_Parent = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitID_Parent");
                OnUnitID_ParentChanged();
            }
        }
        private global::System.Guid _UnitID_Parent;
        partial void OnUnitID_ParentChanging(global::System.Guid value);
        partial void OnUnitID_ParentChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UnitID
        {
            get
            {
                return _UnitID;
            }
            set
            {
                OnUnitIDChanging(value);
                ReportPropertyChanging("UnitID");
                _UnitID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitID");
                OnUnitIDChanged();
            }
        }
        private global::System.Guid _UnitID;
        partial void OnUnitIDChanging(global::System.Guid value);
        partial void OnUnitIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int16 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int16 _Quantity;
        partial void OnQuantityChanging(global::System.Int16 value);
        partial void OnQuantityChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "UnitQuantitative", "Unit")]
        public Unit Unit
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DatabaseModel.UnitQuantitative", "Unit").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DatabaseModel.UnitQuantitative", "Unit").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Unit> UnitReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Unit>("DatabaseModel.UnitQuantitative", "Unit");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Unit>("DatabaseModel.UnitQuantitative", "Unit", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="DatabaseModel", Name="Unit")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Unit : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Unit object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="unitName">Initial value of the UnitName property.</param>
        public static Unit CreateUnit(global::System.Guid id, global::System.String unitName)
        {
            Unit unit = new Unit();
            unit.Id = id;
            unit.UnitName = unitName;
            return unit;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Guid _Id;
        partial void OnIdChanging(global::System.Guid value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UnitName
        {
            get
            {
                return _UnitName;
            }
            set
            {
                OnUnitNameChanging(value);
                ReportPropertyChanging("UnitName");
                _UnitName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UnitName");
                OnUnitNameChanged();
            }
        }
        private global::System.String _UnitName;
        partial void OnUnitNameChanging(global::System.String value);
        partial void OnUnitNameChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("DatabaseModel", "UnitQuantitative", "Quantitative")]
        public EntityCollection<Quantitative> Quantitatives
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Quantitative>("DatabaseModel.UnitQuantitative", "Quantitative");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Quantitative>("DatabaseModel.UnitQuantitative", "Quantitative", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
